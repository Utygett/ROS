<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robot">

	<xacro:property name="update_rate" value="100" />

	<gazebo>
		<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

		<!-- Plugin update rate in Hz -->
		<updateRate>${update_rate}</updateRate>

		<!-- Name of left joint, defaults to `left_joint` -->
		<leftJoint>left_back_joint</leftJoint>

		<!-- Name of right joint, defaults to `right_joint` -->
		<rightJoint>right_back_joint</rightJoint>

		<!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
		<wheelSeparation>0.1</wheelSeparation>

		<!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
		<wheelDiameter>0.02</wheelDiameter>

		<!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
		<wheelAcceleration>1.0</wheelAcceleration>

		<!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
		<wheelTorque>20</wheelTorque>

		<!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
		<commandTopic>cmd_vel</commandTopic>

		<!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
		<odometryTopic>odom</odometryTopic>

		<!-- Odometry frame, defaults to `odom` -->
		<odometryFrame>odom</odometryFrame>

		<!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
		<robotBaseFrame>base_footprint</robotBaseFrame>

		<!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
		<odometrySource>1</odometrySource>

		<!-- Set to true to publish transforms for the wheel links, defaults to false -->
		<publishWheelTF>true</publishWheelTF>

		<!-- Set to true to publish transforms for the odometry, defaults to true -->
		<publishOdom>true</publishOdom>

		<!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
		<publishWheelJointState>true</publishWheelJointState>

		<!-- Set to true to swap right and left wheels, defaults to true -->
		<legacyMode>false</legacyMode>
		</plugin>
	</gazebo>

	<gazebo>
		<plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
			<alwaysOn>true</alwaysOn>
			<bodyName>sensor_place</bodyName>
			<topicName>imu</topicName>
			<serviceName>imu_service</serviceName>
			<gaussianNoise>0.0</gaussianNoise>
			<updateRate>20.0</updateRate>
		</plugin>
 	</gazebo>

	<!-- <gazebo reference="sensor_place">
		<sensor name="camera" type="depth">
			<update_rate>20</update_rate>
			<camera>
			<horizontal_fov>1.047198</horizontal_fov>
			<image>
				<width>640</width>
				<height>480</height>
				<format>R8G8B8</format>
			</image>
			<clip>
				<near>0.05</near>
				<far>3</far>
			</clip>
			</camera>
			<plugin name="controller" filename="libgazebo_ros_openni_kinect.so">
				<baseline>0.2</baseline>
				<alwaysOn>true</alwaysOn>
				<updateRate>1.0</updateRate>
				<cameraName>camera_ir</cameraName>
				<imageTopicName>/camera/color/image_raw</imageTopicName>
				<cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
				<depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
				<depthImageInfoTopicName>/camera/depth/camera_info</depthImageInfoTopicName>
				<pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
				<frameName>sensor_place</frameName>
				<pointCloudCutoff>0.5</pointCloudCutoff>
				<pointCloudCutoffMax>3.0</pointCloudCutoffMax>
				<distortionK1>0</distortionK1>
				<distortionK2>0</distortionK2>
				<distortionK3>0</distortionK3>
				<distortionT1>0</distortionT1>
				<distortionT2>0</distortionT2>
				<CxPrime>0</CxPrime>
				<Cx>0</Cx>
				<Cy>0</Cy>
				<focalLength>0</focalLength>
				<hackBaseline>0</hackBaseline>
			</plugin>
		</sensor>
	</gazebo> -->

	<!-- <gazebo reference="sensor_place">
    	<sensor type="gpu_ray" name="lidar_sensor">
     		<pose>0 0 0 0 0 0</pose>
      		<visualize>true</visualize>
      		<update_rate>40</update_rate>
      		<ray>
        		<scan>
          			<horizontal>
            			<samples>720</samples>
            			<resolution>1</resolution>
            			<min_angle>-0.76</min_angle>
            			<max_angle>0.76</max_angle>
          			</horizontal>
        		</scan>
        		<range>
          			<min>0.10</min>
          			<max>30.0</max>
          			<resolution>0.01</resolution>
        		</range>
        		<noise>
          			<type>gaussian</type>
          			<mean>0.0</mean>
          			<stddev>0.01</stddev>
        		</noise>
      		</ray>
      		<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        		<topicName>/rrbot/laser/scan</topicName>
        		<frameName>hokuyo_link</frameName>
      		</plugin>
    	</sensor>
  	</gazebo> -->
</robot>